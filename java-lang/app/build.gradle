// gradle 빌드 도구에 플러그인 장착
plugins {
    // 자바 소스를 컴파일할 때 사용할 도구를 추가한다.
    // 뿐만 아니라 eclipse 플러그인과 결합해서
    // eclipse IDE의 자바 관련 설정 파일을 생성할 때도 사용한다.
    // 예) .classpath, .settings/*
    id 'java'  

    // 이클립스 관련 파일을 다룰 때 사용할 도구를 추가한다.
    // 예) .project
    id 'eclipse' 
}

// 자바 소스를 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile) {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8' 

    // 소스 파일을 작성할 때 사용할 자바 버전
    sourceCompatibility = '11'

    // 자바 클래스를 실행시킬 JVM의 최소 버전
    targetCompatibility = '11'
}

// .class 파일을 둘 폴더를 지정하지 않으면 
// Gradle 은 기본 출력 폴더의 경로로 'bin/default' 를 사용한다.
// 
// 그러나 이클립스 설정 파일을 만드는 과정에서 
// 각 소스 경로에 대한 기본 출력 폴더가 bin/main 으로 따로 설정되어 있다.
// 그래서 실제 자바 소스 파일을 컴파일하면 bin/default 가 아니라 
// bin/main 폴더에 .class 파일이 저장된다.
// 
/*
eclipse {
	classpath {
        defaultOutputDir = file('myokok')
        
		file {
        	whenMerged { 
    	    	// use default Output for all source-folders. see also defaultOutputDir per project
	        	entries.each { source ->
					if (source.kind == 'src' && !source.path.startsWith('/')) { // only Source-folders in the project starting with '/' are project-references
						source.output = null
        			}
				}
    	    }
	    }
        
	}
}
*/

// eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "eomcs-java-lang"
    }
    jdt {
      //if you want to alter the java versions (by default they are configured with gradle java plugin settings):
      sourceCompatibility = 11
      targetCompatibility = 11
      javaRuntimeName = "JavaSE-11"
    }
}


// 프로젝트에서 사용할 자바 라이브러리를 다운로드 받을 때 접속할 서버
repositories {
    mavenCentral()
}

// 프로젝트에서 사용할 자바 라이브러리 목록
dependencies {
  // Spring IoC 컨테이너
  implementation 'org.springframework:spring-context:5.3.13'

  // @Resource 애노테이션이 들어 있는 API
  implementation 'javax.annotation:javax.annotation-api:1.3.2'

  // Spring JDBC 보조 라이브러리
  // - DataSource 구현체가 들어 있다.
  implementation 'org.springframework:spring-jdbc:5.3.13'

  // Apache commons-dbcp 라이브러리
  // - DataSource 구현체가 들어 있다.
  implementation 'commons-dbcp:commons-dbcp:1.4'
   
  // Reflection API를 좀 더 쉽게 사용하게 도와주는 유틸리티
  //implementation 'org.reflections:reflections:0.9.12'

  // Mybatis 퍼시스턴스 프레임워크
  implementation 'org.mybatis:mybatis:3.5.7'

  // Mybastis를 Spring과 연동할 때 사용할 라이브러리
  implementation 'org.mybatis:mybatis-spring:2.0.6'

  // MariaDB JDBC 드라이버
  implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.3'

  // Oracle JDBC Driver
  implementation 'com.oracle.database.jdbc:ojdbc11:21.5.0.0'
    
  // MSSQL JDBC Driver
  implementation 'com.microsoft.sqlserver:mssql-jdbc:10.2.0.jre11'
  
  // Google JSON 라이브러리
  implementation 'com.google.code.gson:gson:2.8.9'
  
  // jackson-databind JSON 라이브러리
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'

  // Apache HTTP 통신 라이브러리
  //implementation 'org.apache.httpcomponents.client5:httpclient5:5.0'
  //implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.0'

  // AOP 라이브러리
  //implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.5'

  // log4j 2.x 라이브러리
  implementation 'org.apache.logging.log4j:log4j-core:2.14.1'

  // Use JUnit test framework.
  testImplementation 'junit:junit:4.13.2'

  // This dependency is used by the application.
  implementation 'com.google.guava:guava:30.1.1-jre'
}